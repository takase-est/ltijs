{"version":3,"file":"DeepLinking.js","names":["jwt","debug","path","fileURLToPath","sprightly","provDeepLinkingDebug","__dirname","dirname","import","meta","url","deepLinkSubmissionForm","join","_getPlatform","_classPrivateFieldLooseKey","_ENCRYPTIONKEY","_Database","DeepLinking","constructor","getPlatform","ENCRYPTIONKEY","Database","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","createDeepLinkingForm","idtoken","contentItems","options","message","createDeepLinkingMessage","form","action","platformContext","deepLinkingSettings","deep_link_return_url","Error","Array","isArray","platform","iss","clientId","platformActive","jwtBody","platformClientId","aud","nonce","encodeURIComponent","map","_","Math","random","toString","deploymentId","errMessage","errmessage","log","errLog","errlog","data","selectedContentItems","acceptedTypes","accept_types","acceptMultiple","accept_multiple","contentItem","includes","type","push","sign","platformPrivateKey","algorithm","expiresIn","keyid","platformKid"],"sources":["../../../../src/esm/Provider/Services/DeepLinking.js"],"sourcesContent":["/* Provider Deep Linking Service */\n\nimport jwt from 'jsonwebtoken'\nimport debug from 'debug'\nimport path from 'path'\nimport { fileURLToPath } from 'url'\nimport { sprightly } from 'sprightly'\n\nconst provDeepLinkingDebug = debug('provider:deepLinkingService')\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\nconst deepLinkSubmissionForm = path.join(__dirname, '../../Templates', 'DeepLinkSubmissionForm.html')\n\nclass DeepLinking {\n  #getPlatform = null\n\n  #ENCRYPTIONKEY = ''\n\n  #Database\n\n  constructor (getPlatform, ENCRYPTIONKEY, Database) {\n    this.#getPlatform = getPlatform\n    this.#ENCRYPTIONKEY = ENCRYPTIONKEY\n    this.#Database = Database\n  }\n\n  /**\n   * @description Creates an auto submitting form containing the DeepLinking Message.\n   * @param {Object} idtoken - Idtoken for the user.\n   * @param {Array} contentItems - Array of contentItems to be linked.\n   * @param {Object} options - Object containing extra options that mus be sent along the content items.\n   * @param {String} options.message - Message the platform may show to the end user upon return to the platform.\n   * @param {String} options.errMessage - Message the platform may show to the end user upon return to the platform if some error has occurred.\n   * @param {String} options.log - Message the platform may log in it's system upon return to the platform.\n   * @param {String} options.errLog - Message the platform may log in it's system upon return to the platform if some error has occurred.\n   */\n  async createDeepLinkingForm (idtoken, contentItems, options) {\n    const message = await this.createDeepLinkingMessage(idtoken, contentItems, options)\n\n    // Creating auto submitting form\n    const form = sprightly(deepLinkSubmissionForm, { action: idtoken.platformContext.deepLinkingSettings.deep_link_return_url, message })\n    return form\n  }\n\n  /**\n   * @description Creates a DeepLinking signed message.\n   * @param {Object} idtoken - Idtoken for the user.\n   * @param {Array} contentItems - Array of contentItems to be linked.\n   * @param {Object} options - Object containing extra options that mus be sent along the content items.\n   * @param {String} options.message - Message the platform may show to the end user upon return to the platform.\n   * @param {String} options.errMessage - Message the platform may show to the end user upon return to the platform if some error has occurred.\n   * @param {String} options.log - Message the platform may log in it's system upon return to the platform.\n   * @param {String} options.errLog - Message the platform may log in it's system upon return to the platform if some error has occurred.\n   */\n  async createDeepLinkingMessage (idtoken, contentItems, options) {\n    provDeepLinkingDebug('Starting deep linking process')\n    if (!idtoken) { provDeepLinkingDebug('Missing IdToken object.'); throw new Error('MISSING_ID_TOKEN') }\n    if (!idtoken.platformContext.deepLinkingSettings) { provDeepLinkingDebug('DeepLinkingSettings object missing.'); throw new Error('MISSING_DEEP_LINK_SETTINGS') }\n    if (!contentItems) { provDeepLinkingDebug('No content item passed.'); throw new Error('MISSING_CONTENT_ITEMS') }\n\n    // If it's not an array, turns it into an array\n    if (!Array.isArray(contentItems)) contentItems = [contentItems]\n\n    // Gets platform\n    const platform = await this.#getPlatform(idtoken.iss, idtoken.clientId, this.#ENCRYPTIONKEY, this.#Database)\n    if (!platform) {\n      provDeepLinkingDebug('Platform not found')\n      throw new Error('PLATFORM_NOT_FOUND')\n    }\n    const platformActive = await platform.platformActive()\n    if (!platformActive) throw new Error('PLATFORM_NOT_ACTIVATED')\n\n    provDeepLinkingDebug('Building basic JWT body')\n    // Builds basic jwt body\n    const jwtBody = {\n      iss: await platform.platformClientId(),\n      aud: idtoken.iss,\n      nonce: encodeURIComponent([...Array(25)].map(_ => (Math.random() * 36 | 0).toString(36)).join``),\n      'https://purl.imsglobal.org/spec/lti/claim/deployment_id': idtoken.deploymentId,\n      'https://purl.imsglobal.org/spec/lti/claim/message_type': 'LtiDeepLinkingResponse',\n      'https://purl.imsglobal.org/spec/lti/claim/version': '1.3.0'\n    }\n\n    // Adding messaging options\n    if (options) {\n      if (options.message) jwtBody['https://purl.imsglobal.org/spec/lti-dl/claim/msg'] = options.message\n      if (options.errMessage || options.errmessage) jwtBody['https://purl.imsglobal.org/spec/lti-dl/claim/errormsg '] = options.errMessage || options.errmessage\n      if (options.log) jwtBody['https://purl.imsglobal.org/spec/lti-dl/claim/log'] = options.log\n      if (options.errLog || options.errlog) jwtBody['https://purl.imsglobal.org/spec/lti-dl/claim/errorlog'] = options.errLog || options.errlog\n    }\n\n    // Adding Data claim if it exists in initial request\n    if (idtoken.platformContext.deepLinkingSettings.data) jwtBody['https://purl.imsglobal.org/spec/lti-dl/claim/data'] = idtoken.platformContext.deepLinkingSettings.data\n\n    provDeepLinkingDebug('Sanitizing content item array based on the platform\\'s requirements:')\n    const selectedContentItems = []\n\n    const acceptedTypes = idtoken.platformContext.deepLinkingSettings.accept_types\n    const acceptMultiple = !(idtoken.platformContext.deepLinkingSettings.accept_multiple === 'false' || idtoken.platformContext.deepLinkingSettings.accept_multiple === false)\n\n    provDeepLinkingDebug('Accepted Types: ' + acceptedTypes)\n    provDeepLinkingDebug('Accepts Mutiple: ' + acceptMultiple)\n\n    provDeepLinkingDebug('Received content items: ')\n    provDeepLinkingDebug(contentItems)\n\n    for (const contentItem of contentItems) {\n      if (!acceptedTypes.includes(contentItem.type)) continue\n      selectedContentItems.push(contentItem)\n      if (!acceptMultiple) break\n    }\n    provDeepLinkingDebug('Content items to be sent: ')\n    provDeepLinkingDebug(selectedContentItems)\n    jwtBody['https://purl.imsglobal.org/spec/lti-dl/claim/content_items'] = selectedContentItems\n\n    const message = jwt.sign(jwtBody, await platform.platformPrivateKey(), { algorithm: 'RS256', expiresIn: 60, keyid: await platform.platformKid() })\n    return message\n  }\n}\n\nexport default DeepLinking\n"],"mappings":";;;AAAA;;AAEA,OAAOA,GAAG,MAAM,cAAc;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,aAAa,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,WAAW;AAErC,MAAMC,oBAAoB,GAAGJ,KAAK,CAAC,6BAA6B,CAAC;AAEjE,MAAMK,SAAS,GAAGJ,IAAI,CAACK,OAAO,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC;AAC9D,MAAMC,sBAAsB,GAAGT,IAAI,CAACU,IAAI,CAACN,SAAS,EAAE,iBAAiB,EAAE,6BAA6B,CAAC;AAAA,IAAAO,YAAA,gBAAAC,0BAAA;AAAA,IAAAC,cAAA,gBAAAD,0BAAA;AAAA,IAAAE,SAAA,gBAAAF,0BAAA;AAErG,MAAMG,WAAW,CAAC;EAOhBC,WAAWA,CAAEC,WAAW,EAAEC,aAAa,EAAEC,QAAQ,EAAE;IAAAC,MAAA,CAAAC,cAAA,OAAAV,YAAA;MAAAW,QAAA;MAAAC,KAAA,EANpC;IAAI;IAAAH,MAAA,CAAAC,cAAA,OAAAR,cAAA;MAAAS,QAAA;MAAAC,KAAA,EAEF;IAAE;IAAAH,MAAA,CAAAC,cAAA,OAAAP,SAAA;MAAAQ,QAAA;MAAAC,KAAA;IAAA;IAKjBC,2BAAA,KAAI,EAAAb,YAAA,EAAAA,YAAA,IAAgBM,WAAW;IAC/BO,2BAAA,KAAI,EAAAX,cAAA,EAAAA,cAAA,IAAkBK,aAAa;IACnCM,2BAAA,KAAI,EAAAV,SAAA,EAAAA,SAAA,IAAaK,QAAQ;EAC3B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMM,qBAAqBA,CAAEC,OAAO,EAAEC,YAAY,EAAEC,OAAO,EAAE;IAC3D,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,wBAAwB,CAACJ,OAAO,EAAEC,YAAY,EAAEC,OAAO,CAAC;;IAEnF;IACA,MAAMG,IAAI,GAAG7B,SAAS,CAACO,sBAAsB,EAAE;MAAEuB,MAAM,EAAEN,OAAO,CAACO,eAAe,CAACC,mBAAmB,CAACC,oBAAoB;MAAEN;IAAQ,CAAC,CAAC;IACrI,OAAOE,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMD,wBAAwBA,CAAEJ,OAAO,EAAEC,YAAY,EAAEC,OAAO,EAAE;IAC9DzB,oBAAoB,CAAC,+BAA+B,CAAC;IACrD,IAAI,CAACuB,OAAO,EAAE;MAAEvB,oBAAoB,CAAC,yBAAyB,CAAC;MAAE,MAAM,IAAIiC,KAAK,CAAC,kBAAkB,CAAC;IAAC;IACrG,IAAI,CAACV,OAAO,CAACO,eAAe,CAACC,mBAAmB,EAAE;MAAE/B,oBAAoB,CAAC,qCAAqC,CAAC;MAAE,MAAM,IAAIiC,KAAK,CAAC,4BAA4B,CAAC;IAAC;IAC/J,IAAI,CAACT,YAAY,EAAE;MAAExB,oBAAoB,CAAC,yBAAyB,CAAC;MAAE,MAAM,IAAIiC,KAAK,CAAC,uBAAuB,CAAC;IAAC;;IAE/G;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACX,YAAY,CAAC,EAAEA,YAAY,GAAG,CAACA,YAAY,CAAC;;IAE/D;IACA,MAAMY,QAAQ,GAAG,MAAAf,2BAAA,CAAM,IAAI,EAAAb,YAAA,EAAAA,YAAA,EAAce,OAAO,CAACc,GAAG,EAAEd,OAAO,CAACe,QAAQ,EAAAjB,2BAAA,CAAE,IAAI,EAAAX,cAAA,EAAAA,cAAA,GAAAW,2BAAA,CAAiB,IAAI,EAAAV,SAAA,EAAAA,SAAA,EAAW;IAC5G,IAAI,CAACyB,QAAQ,EAAE;MACbpC,oBAAoB,CAAC,oBAAoB,CAAC;MAC1C,MAAM,IAAIiC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IACA,MAAMM,cAAc,GAAG,MAAMH,QAAQ,CAACG,cAAc,CAAC,CAAC;IACtD,IAAI,CAACA,cAAc,EAAE,MAAM,IAAIN,KAAK,CAAC,wBAAwB,CAAC;IAE9DjC,oBAAoB,CAAC,yBAAyB,CAAC;IAC/C;IACA,MAAMwC,OAAO,GAAG;MACdH,GAAG,EAAE,MAAMD,QAAQ,CAACK,gBAAgB,CAAC,CAAC;MACtCC,GAAG,EAAEnB,OAAO,CAACc,GAAG;MAChBM,KAAK,EAAEC,kBAAkB,CAAC,CAAC,GAAGV,KAAK,CAAC,EAAE,CAAC,CAAC,CAACW,GAAG,CAACC,CAAC,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC1C,IAAI,EAAE,CAAC;MAChG,yDAAyD,EAAEgB,OAAO,CAAC2B,YAAY;MAC/E,wDAAwD,EAAE,wBAAwB;MAClF,mDAAmD,EAAE;IACvD,CAAC;;IAED;IACA,IAAIzB,OAAO,EAAE;MACX,IAAIA,OAAO,CAACC,OAAO,EAAEc,OAAO,CAAC,kDAAkD,CAAC,GAAGf,OAAO,CAACC,OAAO;MAClG,IAAID,OAAO,CAAC0B,UAAU,IAAI1B,OAAO,CAAC2B,UAAU,EAAEZ,OAAO,CAAC,wDAAwD,CAAC,GAAGf,OAAO,CAAC0B,UAAU,IAAI1B,OAAO,CAAC2B,UAAU;MAC1J,IAAI3B,OAAO,CAAC4B,GAAG,EAAEb,OAAO,CAAC,kDAAkD,CAAC,GAAGf,OAAO,CAAC4B,GAAG;MAC1F,IAAI5B,OAAO,CAAC6B,MAAM,IAAI7B,OAAO,CAAC8B,MAAM,EAAEf,OAAO,CAAC,uDAAuD,CAAC,GAAGf,OAAO,CAAC6B,MAAM,IAAI7B,OAAO,CAAC8B,MAAM;IAC3I;;IAEA;IACA,IAAIhC,OAAO,CAACO,eAAe,CAACC,mBAAmB,CAACyB,IAAI,EAAEhB,OAAO,CAAC,mDAAmD,CAAC,GAAGjB,OAAO,CAACO,eAAe,CAACC,mBAAmB,CAACyB,IAAI;IAErKxD,oBAAoB,CAAC,sEAAsE,CAAC;IAC5F,MAAMyD,oBAAoB,GAAG,EAAE;IAE/B,MAAMC,aAAa,GAAGnC,OAAO,CAACO,eAAe,CAACC,mBAAmB,CAAC4B,YAAY;IAC9E,MAAMC,cAAc,GAAG,EAAErC,OAAO,CAACO,eAAe,CAACC,mBAAmB,CAAC8B,eAAe,KAAK,OAAO,IAAItC,OAAO,CAACO,eAAe,CAACC,mBAAmB,CAAC8B,eAAe,KAAK,KAAK,CAAC;IAE1K7D,oBAAoB,CAAC,kBAAkB,GAAG0D,aAAa,CAAC;IACxD1D,oBAAoB,CAAC,mBAAmB,GAAG4D,cAAc,CAAC;IAE1D5D,oBAAoB,CAAC,0BAA0B,CAAC;IAChDA,oBAAoB,CAACwB,YAAY,CAAC;IAElC,KAAK,MAAMsC,WAAW,IAAItC,YAAY,EAAE;MACtC,IAAI,CAACkC,aAAa,CAACK,QAAQ,CAACD,WAAW,CAACE,IAAI,CAAC,EAAE;MAC/CP,oBAAoB,CAACQ,IAAI,CAACH,WAAW,CAAC;MACtC,IAAI,CAACF,cAAc,EAAE;IACvB;IACA5D,oBAAoB,CAAC,4BAA4B,CAAC;IAClDA,oBAAoB,CAACyD,oBAAoB,CAAC;IAC1CjB,OAAO,CAAC,4DAA4D,CAAC,GAAGiB,oBAAoB;IAE5F,MAAM/B,OAAO,GAAG/B,GAAG,CAACuE,IAAI,CAAC1B,OAAO,EAAE,MAAMJ,QAAQ,CAAC+B,kBAAkB,CAAC,CAAC,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAMlC,QAAQ,CAACmC,WAAW,CAAC;IAAE,CAAC,CAAC;IAClJ,OAAO7C,OAAO;EAChB;AACF;AAEA,eAAed,WAAW","ignoreList":[]}